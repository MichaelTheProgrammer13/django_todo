{"ast":null,"code":"import _objectSpread from \"/Users/michaelcasas/Desktop/django_todo_react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/michaelcasas/Desktop/django_todo_react/frontend/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { render } from \"@testing-library/react\";\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n\n      const activeItem = _objectSpread({}, this.state.activeItem, {\n        [name]: value\n      });\n\n      this.setState({\n        activeItem\n      });\n    };\n\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          toggle = _this$props.toggle,\n          onSave = _this$props.onSave;\n    return React.createElement(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" Todo Item \"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.activeItem.title,\n      onChange: this.handleChange,\n      placeholder: \"Enter Todo Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"completed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"completed\",\n      checked: this.state.activeItem.completed,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), \"Completed\")))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      colo: \"success\",\n      onClick: () => onSave(this.state.activeItem),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/michaelcasas/Desktop/django_todo_react/frontend/src/components/Modal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","render","CustomModal","constructor","props","handleChange","e","target","name","value","type","checked","activeItem","state","setState","toggle","onSave","title","completed"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,WALJ,EAMIC,IANJ,EAOIC,SAPJ,EAQIC,KARJ,EASIC,KATJ,QAUO,YAVP;AAWA,SAASC,MAAT,QAAuB,wBAAvB;AAEA,eAAe,MAAMC,WAAN,SAA0BX,SAA1B,CAAoC;AAC/CY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,YAPmB,GAOJC,CAAC,IAAI;AAAA,sBACMA,CAAC,CAACC,MADR;AAAA,UACVC,IADU,aACVA,IADU;AAAA,UACJC,KADI,aACJA,KADI;;AAEhB,UAAIH,CAAC,CAACC,MAAF,CAASG,IAAT,KAAkB,UAAtB,EAAkC;AAC9BD,QAAAA,KAAK,GAAGH,CAAC,CAACC,MAAF,CAASI,OAAjB;AACH;;AACD,YAAMC,UAAU,qBAAQ,KAAKC,KAAL,CAAWD,UAAnB;AAA+B,SAACJ,IAAD,GAAQC;AAAvC,QAAhB;;AACA,WAAKK,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACH,KAdkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,UAAU,EAAE,KAAKR,KAAL,CAAWQ;AADd,KAAb;AAIP;;AASGX,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKG,KAD3B;AAAA,UACGW,MADH,eACGA,MADH;AAAA,UACWC,MADX,eACWA,MADX;AAEL,WACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,IAAf;AAAqB,MAAA,MAAM,EAAED,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWD,UAAX,CAAsBK,KAHjC;AAII,MAAA,QAAQ,EAAE,KAAKZ,YAJnB;AAKI,MAAA,WAAW,EAAC,kBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAWI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWD,UAAX,CAAsBM,SAHnC;AAII,MAAA,QAAQ,EAAE,KAAKb,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,cADJ,CAXJ,CADJ,CAFJ,EA2BI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,MAAMW,MAAM,CAAC,KAAKH,KAAL,CAAWD,UAAZ,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CA3BJ,CADJ;AAmCH;;AArD8C","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Input,\n    Label\n} from \"reactstrap\";\nimport { render } from \"@testing-library/react\";\n\nexport default class CustomModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: this.props.activeItem\n        \n    };\n}\n    handleChange = e => {\n        let { name, value } = e.target;\n        if (e.target.type === \"checkbox\") {\n            value = e.target.checked;\n        }\n        const activeItem = { ...this.state.activeItem, [name]: value };\n        this.setState({ activeItem });\n    };\n    render() {\n        const { toggle, onSave } = this.props;\n        return (\n            <Modal isOpen={true} toggle={toggle}>\n                <ModalHeader toggle={toggle}> Todo Item </ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"title\">Title</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"title\"\n                                value={this.state.activeItem.title}\n                                onChange={this.handleChange}\n                                placeholder=\"Enter Todo Title\"\n                            />\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label for=\"completed\">\n                                <Input\n                                    type=\"checkbox\"\n                                    name=\"completed\"\n                                    checked={this.state.activeItem.completed}\n                                    onChange={this.handleChange}\n                                />\n                                Completed\n                            </Label>    \n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button colo=\"success\" onClick={() => onSave(this.state.activeItem)}>\n                        Save \n                    </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}