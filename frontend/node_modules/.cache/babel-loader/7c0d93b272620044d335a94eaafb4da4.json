{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcasas/Desktop/django_todo_react/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport Modal from \"./components/Modal\";\nconst todoItems = [{\n  \"id\": 1,\n  \"title\": \"Learn React!\",\n  \"description\": \"suck it up and learn react my dude\",\n  \"completed\": false\n}, {\n  \"id\": 2,\n  \"title\": \"CONVINCE CHRIS\",\n  \"description\": \"Figure out a way to convince the mokies that django/react is the way...\",\n  \"completed\": false\n}, {\n  \"id\": 3,\n  \"title\": \"REDUX\",\n  \"description\": \"Prep yourself to get mentally \\\"wrekt\\\" according to the boi\",\n  \"completed\": false\n}, {\n  \"id\": 4,\n  \"title\": \"New todo\",\n  \"description\": \"random stuffs\",\n  \"completed\": false\n}];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleSubmit = item => {\n      this.toggle();\n      alert(\"save\" + JSON.stringify(item));\n    };\n\n    this.handleDelete = item => {\n      alert(\"delete\" + JSON.stringify(item));\n    };\n\n    this.createItem = () => {\n      const item = {\n        title: \"\",\n        description: \"\",\n        completed: false\n      };\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.editItem = item => {\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.displayCompleted = status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return React.createElement(\"div\", {\n        className: \"my-5 tab-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => this.displayCompleted(true),\n        className: this.state.viewCompleted ? \"active\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"complete\"), React.createElement(\"span\", {\n        onClick: () => this.displayCompleted(false),\n        className: this.state.viewCompleted ? \"\" : \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Incomplete\"));\n    };\n\n    this.renderItems = () => {\n      const viewCompleted = this.state.viewCompleted;\n      const newItems = this.state.todoList.filter(item => item.completed === viewCompleted);\n      return newItems.map(item => React.createElement(\"li\", {\n        key: item.id,\n        className: \"list-group-item align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: `todo-title mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`,\n        title: item.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, item.title), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.editItem(item),\n        className: \"btn btn-secondary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        onClick: () => this.handleDelete(item),\n        className: \"btn btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Delete\"))));\n    };\n\n    this.state = {\n      modal: false,\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: todoItems\n    };\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-white text-uppercase text-center my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Todo app\"), React.createElement(\"div\", {\n      className: \"row \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-10 mx auto p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.createItem,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Add task\")), this.renderTabList(), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.renderItems())))), this.state.modal ? React.createElement(Modal, {\n      activeItem: this.state.activeItem,\n      toggle: this.toggle,\n      onSave: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/michaelcasas/Desktop/django_todo_react/frontend/src/App.js"],"names":["React","Component","Modal","todoItems","App","constructor","props","toggle","setState","modal","state","handleSubmit","item","alert","JSON","stringify","handleDelete","createItem","title","description","completed","activeItem","editItem","displayCompleted","status","viewCompleted","renderTabList","renderItems","newItems","todoList","filter","map","id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from \"./components/Modal\";\n\n\nconst todoItems = [\n  {\n    \"id\": 1,\n    \"title\": \"Learn React!\",\n    \"description\": \"suck it up and learn react my dude\",\n    \"completed\": false\n  },\n  {\n    \"id\": 2,\n    \"title\": \"CONVINCE CHRIS\",\n    \"description\": \"Figure out a way to convince the mokies that django/react is the way...\",\n    \"completed\": false\n  },\n  {\n    \"id\": 3,\n    \"title\": \"REDUX\",\n    \"description\": \"Prep yourself to get mentally \\\"wrekt\\\" according to the boi\",\n    \"completed\": false\n  },\n  {\n    \"id\": 4,\n    \"title\": \"New todo\",\n    \"description\": \"random stuffs\",\n    \"completed\": false\n  }\n]; \nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        modal: false,\n        viewCompleted: false,\n        activeItem: {\n          title: \"\",\n          description: \"\",\n          completed: false,\n        },\n        todoList: todoItems\n      };\n  }\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n  handleSubmit = item => {\n    this.toggle();\n    alert(\"save\" + JSON.stringify(item));\n  };\n  handleDelete = item => {\n    alert(\"delete\" + JSON.stringify(item));\n  };\n  createItem = () => {\n    const item = {title: \"\", description: \"\", completed: false };\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  editItem = item => {\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  displayCompleted = status => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n    return this.setState({ viewCompleted: false });\n  };\n\nrenderTabList = () => {\n  return(\n    <div className=\"my-5 tab-list\">\n      <span\n        onClick={() => this.displayCompleted(true)}\n        className={this.state.viewCompleted ? \"active\" : \"\"}\n      >\n        complete\n      </span>\n      <span\n        onClick={() => this.displayCompleted(false)}\n        className={this.state.viewCompleted ? \"\" : \"active\"}\n      > \n        Incomplete \n      </span>\n    </div>\n  );\n};\nrenderItems = () => {\n  const { viewCompleted } = this.state;\n  const newItems = this.state.todoList.filter (\n    item => item.completed === viewCompleted\n  );\n  return newItems.map(item => (\n    <li \n      key={item.id} \n      className=\"list-group-item align-items-center\"\n    >\n      <span\n        className={`todo-title mr-2 ${\n          this.state.viewCompleted ? \"completed-todo\" : \"\"\n        }`}\n        title ={item.description}\n        >\n          {item.title}\n        </span>\n      <span>\n        <button \n        onClick={() => this.editItem(item)}\n        className =\"btn btn-secondary mr-2\"\n        > \n          Edit \n        </button>\n        <button \n          onClick={() => this.handleDelete(item)}\n          className=\"btn btn-danger\"\n          >\n            Delete \n          </button>\n      </span>\n    </li>\n  ));\n};\n  render() {\n    return (\n      <main className=\"content\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n        <div className=\"row \">\n          <div className=\"col-md-6 col-sm-10 mx auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n               <button onClick={this.createItem} className=\"btn btn-primary\">\n                  Add task\n                </button>\n              </div>\n                {this.renderTabList()}\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems()}\n                </ul>\n              </div>\n            </div>\n          </div>\n          {this.state.modal ? (\n            <Modal\n              activeItem={this.state.activeItem}\n              toggle={this.toggle}\n              onSave={this.handleSubmit}\n              />\n          ) : null}\n      </main>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}